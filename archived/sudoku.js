/* CODE GENERATED BY SPOCK 0 */
var t374 = function (k214) {
 var t375 = function (k215, t1, t2) {	// take
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3 = t2;
  var t4 = 0;
  var t5 = t3;
  var t377 = (t4) === (t5);
  var t376;
  if(t377 !== false) {
   var t378 = null;
   return k215(t378);
  }
  else {
   var t8 = t1;
   var t9 = t8;
   var t380 = t9.car;
   var t6 = t380;
   var t381 = function (t216) {
    var t7 = t216;
    var t382 = new SPOCK.Pair(t6, t7);
    return k215(t382);
   };
   var t10 = t1;
   var t11 = t10;
   var t384 = t11.cdr;
   var t12 = t2;
   var t13 = 1;
   var t385 = (t12)  -  (t13);
   return ___take(t381, t384, t385);
  }
 };
 ___take = t375;	// set! take
 var t387 = function (k217, t14, t15) {	// drop
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t16 = t15;
  var t17 = 0;
  var t18 = t16;
  var t389 = (t17) === (t18);
  var t388;
  if(t389 !== false) {
   return k217(t14);
  }
  else {
   var t19 = t14;
   var t20 = t19;
   var t391 = t20.cdr;
   var t21 = t15;
   var t22 = 1;
   var t392 = (t21)  -  (t22);
   return ___drop(k217, t391, t392);
  }
 };
 ___drop = t387;	// set! drop
 var t394 = function (k218, t23, t24) {	// chunk
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t25 = t23;
  var t396 = (t25) instanceof SPOCK.Pair ;
  var t395;
  if(t396 !== false) {
   var t397 = function (t219) {
    var t26 = t219;
    var t398 = function (t221) {
     var t399 = function (t220) {
      var t27 = t220;
      var t400 = new SPOCK.Pair(t26, t27);
      return k218(t400);
     };
     return ___chunk(t399, t221, t24);
    };
    return ___drop(t398, t23, t24);
   };
   return ___take(t397, t23, t24);
  }
  else {
   var t405 = null;
   return k218(t405);
  }
 };
 ___chunk = t394;	// set! chunk
 var t407 = function (k222, t28, t29, t30) {	// fold
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t31 = t30;
  var t32 = t31;
  var t409 = null;
  var t33 = t409;
  var t410 = (t32) === (t33);
  var t408;
  if(t410 !== false) {
   return k222(t29);
  }
  else {
   var t34 = t29;
   var t35 = t34;
   var t413 = null;
   var t36 = t413;
   var t414 = (t35) === (t36);
   var t412;
   if(t414 !== false) {
    var t415 = function (t223) {
     var t39 = t30;
     var t40 = t39;
     var t416 = t40.cdr;
     return ___fold(k222, t28, t223, t416);
    };
    var t37 = t30;
    var t38 = t37;
    var t418 = t38.car;
    return t28(t415, t418, t29);
   }
   else {
    var t420 = function (t224) {
     var t43 = t30;
     var t44 = t43;
     var t421 = t44.cdr;
     return ___fold(k222, t28, t224, t421);
    };
    var t41 = t30;
    var t42 = t41;
    var t423 = t42.car;
    return t28(t420, t423, t29);
   }
   t408 = t412;
  }
 };
 ___fold = t407;	// set! fold
 var t425 = function (k225, t45) {	// range
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t46 = undefined;
  var t426 = function (k226, t47, t48) {	// t46
   var r = SPOCK.count(arguments);
   if(r) return r;
   loop: while(true) {
    var t49 = t47;
    var t50 = 0;
    var t51 = t49;
    var t428 = (t50) === (t51);
    var t427;
    if(t428 !== false) {
     return k226(t48);
    }
    else {
     var t52 = t47;
     var t53 = 1;
     var t432 = (t52)  -  (t53);
     var t430 = t432;
     var t56 = t47;
     var t57 = 1;
     var t433 = (t56)  -  (t57);
     var t54 = t433;
     var t55 = t48;
     var t434 = new SPOCK.Pair(t54, t55);
     var t431 = t434;
     t47 = t430;
     t48 = t431;
     continue loop;
    }
   }
  };
  t46 = t426;	// set! t46
  var t435 = null;
  return t46(k225, t45, t435);
 };
 ___range = t425;	// set! range
 var t437 = function (k227, t58, t59, t60) {	// set-row
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t438 = function (t228) {
   var t439 = function (t231) {
    var t61 = t231;
    var t229 = t61;
    var t440 = function (t230) {
     return ___append(k227, t228, t229, t230);
    };
    var t62 = t59;
    var t63 = 1;
    var t442 = (t62)  +  (t63);
    return ___drop(t440, t58, t442);
   };
   return ____25list(t439, t60);
  };
  return ___take(t438, t58, t59);
 };
 ___set_2drow = t437;	// set! set-row
 var t446 = function (k232) {	// test-set-row
  var t447 = function (t236) {
   var t67 = t236;
   var t69 = t67;
   var t70 = t69;
   var t448 = t70.cdr;
   var t68 = t448;
   var t71 = t68;
   var t449 = t71.car;
   var t235 = t449;
   var t65 = t235;
   var t450 = new SPOCK.Pair(5, null);
   var t66 = t450;
   var t451 = SPOCK.equalp(t65, t66);
   var t234 = t451;
   var t64 = t234;
   var t452;
   if(t64 !== false) {
    t452 = false;
   }
   else {
    t452 = true;
   }
   var t233 = t452;
   var t453;
   if(t233 !== false) {
    return ___print(k232, "ERROR - row not set");
   }
   else {
    return k232(undefined);
   }
  };
  var t456 = new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null))), new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null))), null));
  var t457 = new SPOCK.Pair(5, null);
  return ___set_2drow(t447, t456, 1, t457);
 };
 ___test_2dset_2drow = t446;	// set! test-set-row
 return ___test_2dset_2drow(k214);
};
SPOCK.run(t374);
var t460 = function (k237) {
 var t461 = function (k238, t72, t73) {	// get-row
  var r = SPOCK.count(arguments);
  if(r) return r;
  return ___list_2dref(k238, t72, t73);
 };
 ___get_2drow = t461;	// set! get-row
 var t463 = function (k239) {	// test-get-row
  var t464 = function (t240) {
   var t74 = t240;
   var t465 = function (t243) {
    var t76 = t243;
    var t466 = new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null)));
    var t77 = t466;
    var t467 = SPOCK.equalp(t76, t77);
    var t242 = t467;
    var t75 = t242;
    var t468;
    if(t75 !== false) {
     t468 = false;
    }
    else {
     t468 = true;
    }
    var t241 = t468;
    var t469;
    if(t241 !== false) {
     return ___print(k239, "ERROR - get-row incorrect");
    }
    else {
     return k239(undefined);
    }
   };
   return ___get_2drow(t465, t74, 1);
  };
  var t473 = new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null))), new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null))), null));
  var t474 = new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null)));
  return ___set_2drow(t464, t473, 1, t474);
 };
 ___test_2dget_2drow = t463;	// set! test-get-row
 return ___test_2dget_2drow(k237);
};
SPOCK.run(t460);
var t477 = function (k244) {
 var t478 = function (k245, t78, t79, t80, t81) {	// set-position
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t479 = function (t246) {
   var t82 = t246;
   var t480 = function (t247) {
    var t481 = function (t251) {
     var t482 = function (t250) {
      var t83 = t250;
      var t248 = t83;
      var t483 = function (t249) {
       return ___append(k245, t247, t248, t249);
      };
      var t84 = t80;
      var t85 = 1;
      var t485 = (t84)  +  (t85);
      return ___drop(t483, t78, t485);
     };
     return ____25list(t482, t251);
    };
    return ___set_2drow(t481, t82, t79, t81);
   };
   return ___take(t480, t78, t80);
  };
  return ___get_2drow(t479, t78, t80);
 };
 ___set_2dposition = t478;	// set! set-position
 var t491 = function (k252) {	// test-set-position
  var t492 = new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null))), new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null))), null));
  var t86 = t492;
  var t493 = function (t255) {
   var t88 = t255;
   var t494 = new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null))), new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(1, new SPOCK.Pair(0, null))), null));
   var t89 = t494;
   var t495 = SPOCK.equalp(t88, t89);
   var t254 = t495;
   var t87 = t254;
   var t496;
   if(t87 !== false) {
    t496 = false;
   }
   else {
    t496 = true;
   }
   var t253 = t496;
   var t497;
   if(t253 !== false) {
    return ___print(k252, "ERROR - get-column incorrect");
   }
   else {
    return k252(undefined);
   }
  };
  return ___set_2dposition(t493, t86, 1, 1, 1);
 };
 ___test_2dset_2dposition = t491;	// set! test-set-position
 return ___test_2dset_2dposition(k244);
};
SPOCK.run(t477);
var t502 = function (k256) {
 var t503 = function (k257, t90, t91) {	// get-column
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t504 = function (k258, t92, t93) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t505 = function (t260) {
    var t506 = function (t259) {
     return ___append(k258, t93, t259);
    };
    return ___take(t506, t260, 1);
   };
   return ___drop(t505, t92, t91);
  };
  var t510 = null;
  return ___fold(k257, t504, t510, t90);
 };
 ___get_2dcolumn = t503;	// set! get-column
 var t512 = function (k261) {	// test-get-column
  var t513 = function (t262) {
   var t94 = t262;
   var t514 = function (t265) {
    var t96 = t265;
    var t515 = new SPOCK.Pair(0, new SPOCK.Pair(1, new SPOCK.Pair(0, null)));
    var t97 = t515;
    var t516 = SPOCK.equalp(t96, t97);
    var t264 = t516;
    var t95 = t264;
    var t517;
    if(t95 !== false) {
     t517 = false;
    }
    else {
     t517 = true;
    }
    var t263 = t517;
    var t518;
    if(t263 !== false) {
     return ___print(k261, "ERROR - get-column incorrect");
    }
    else {
     return k261(undefined);
    }
   };
   return ___get_2dcolumn(t514, t94, 1);
  };
  var t522 = new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null))), new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null))), new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null))), null)));
  var t523 = new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null)));
  return ___set_2drow(t513, t522, 1, t523);
 };
 ___test_2dget_2dcolumn = t512;	// set! test-get-column
 return ___test_2dget_2dcolumn(k256);
};
SPOCK.run(t502);
var t526 = function (k266) {
 var t527 = function (k267, t98, t99, t100) {	// get-quad
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t528 = function (t272) {
   var t529 = function (t268) {
    var t101 = t268;
    var t530 = function (k269, t104, t105) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t531 = function (t271) {
      var t532 = function (t270) {
       return ___append(k269, t105, t270);
      };
      return ___take(t532, t271, 3);
     };
     var t106 = t99;
     var t107 = 3;
     var t535 = (t106)  *  (t107);
     return ___drop(t531, t104, t535);
    };
    var t537 = null;
    return ___fold(k267, t530, t537, t101);
   };
   return ___take(t529, t272, 3);
  };
  var t102 = t100;
  var t103 = 3;
  var t540 = (t102)  *  (t103);
  return ___drop(t528, t98, t540);
 };
 ___get_2dquad = t527;	// set! get-quad
 var t542 = function (k273) {	// test-get-quad
  var t543 = new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null))))))))), new SPOCK.Pair(new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null)))))))))))), new SPOCK.Pair(new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null)))))))))))), null)));
  var t108 = t543;
  return ___get_2dquad(k273, t108, 0, 0);
 };
 ___test_2dget_2dquad = t542;	// set! test-get-quad
 return ___test_2dget_2dquad(k266);
};
SPOCK.run(t526);
var t546 = function (k274) {
 var t547 = function (k275, t109) {	// could-be
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t548 = function (k276, t110, t111) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t549 = function (t277) {
    var t550;
    if(t277 !== false) {
     return k276(t111);
    }
    else {
     var t112 = t110;
     var t113 = t111;
     var t552 = new SPOCK.Pair(t112, t113);
     return k276(t552);
    }
   };
   return ___member(t549, t110, t109);
  };
  var t555 = null;
  var t556 = new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null)))))))));
  return ___fold(k275, t548, t555, t556);
 };
 ___could_2dbe = t547;	// set! could-be
 var t558 = function (k278) {	// test-could-be
  var t559 = function (t281) {
   var t115 = t281;
   var t560 = new SPOCK.Pair(9, new SPOCK.Pair(8, new SPOCK.Pair(7, new SPOCK.Pair(6, new SPOCK.Pair(5, new SPOCK.Pair(4, null))))));
   var t116 = t560;
   var t561 = SPOCK.equalp(t115, t116);
   var t280 = t561;
   var t114 = t280;
   var t562;
   if(t114 !== false) {
    t562 = false;
   }
   else {
    t562 = true;
   }
   var t279 = t562;
   var t563;
   if(t279 !== false) {
    return ___print(k278, "ERROR - could-be incorrect");
   }
   else {
    return k278(undefined);
   }
  };
  var t566 = new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, null)));
  return ___could_2dbe(t559, t566);
 };
 ___test_2dcould_2dbe = t558;	// set! test-could-be
 return ___test_2dcould_2dbe(k274);
};
SPOCK.run(t546);
var t569 = function (k282) {
 var t570 = function (k283, t117, t118, t119) {	// avaliable-at-position
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t571 = function (t285) {
   var t572 = function (t286) {
    var t573 = function (t287) {
     var t574 = function (t284) {
      return ___could_2dbe(k283, t284);
     };
     return ___append(t574, t285, t286, t287);
    };
    var t122 = t118;
    var t123 = 3;
    var t577 = (t122)  /  (t123);
    var t121 = t577;
    var t578 = Math.floor(t121);
    var t120 = t578;
    var t124 = t120;
    var t580 = (t124)  < 0 ;
    var t579;
    if(t580 !== false) {
     var t581 = Math.ceil(t124);
     t579 = t581;
    }
    else {
     var t582 = Math.floor(t124);
     t579 = t582;
    }
    var t127 = t119;
    var t128 = 3;
    var t583 = (t127)  /  (t128);
    var t126 = t583;
    var t584 = Math.floor(t126);
    var t125 = t584;
    var t129 = t125;
    var t586 = (t129)  < 0 ;
    var t585;
    if(t586 !== false) {
     var t587 = Math.ceil(t129);
     t585 = t587;
    }
    else {
     var t588 = Math.floor(t129);
     t585 = t588;
    }
    return ___get_2dquad(t573, t117, t579, t585);
   };
   return ___get_2drow(t572, t117, t119);
  };
  return ___get_2dcolumn(t571, t117, t118);
 };
 ___avaliable_2dat_2dposition = t570;	// set! avaliable-at-position
 var t592 = function (k288) {	// test-available-at-position
  var t593 = new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null))))))))), new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null))))))))), new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(0, null))))))))), null)));
  var t130 = t593;
  var t594 = function (t291) {
   var t132 = t291;
   var t595 = new SPOCK.Pair(5, null);
   var t133 = t595;
   var t596 = SPOCK.equalp(t132, t133);
   var t290 = t596;
   var t131 = t290;
   var t597;
   if(t131 !== false) {
    t597 = false;
   }
   else {
    t597 = true;
   }
   var t289 = t597;
   var t598;
   if(t289 !== false) {
    return ___print(k288, "ERROR - get-quad incorrect");
   }
   else {
    return k288(undefined);
   }
  };
  return ___avaliable_2dat_2dposition(t594, t130, 0, 0);
 };
 ___test_2davailable_2dat_2dposition = t592;	// set! test-available-at-position
 return ___test_2davailable_2dat_2dposition(k282);
};
SPOCK.run(t569);
var t603 = function (k292) {
 var t604 = function (k293, t134) {	// has-1-9?
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t135 = undefined;
  var t605 = function (k294, t136) {	// t135
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t138 = t136;
   var t139 = 0;
   var t140 = t138;
   var t606 = (t139) === (t140);
   var t137 = t606;
   var t607;
   if(t137 !== false) {
    return k294(t137);
   }
   else {
    var t609 = function (t295) {
     var t610;
     if(t295 !== false) {
      var t141 = t136;
      var t142 = 1;
      var t611 = (t141)  -  (t142);
      return t135(k294, t611);
     }
     else {
      return k294(false);
     }
    };
    return ___member(t609, t136, t134);
   }
  };
  t135 = t605;	// set! t135
  return t135(k293, 9);
 };
 ___has_2d1_2d9_3f = t604;	// set! has-1-9?
 var t616 = function (k296) {	// test-has-1-9
  var t617 = function (t298) {
   var t143 = t298;
   var t618;
   if(t143 !== false) {
    t618 = false;
   }
   else {
    t618 = true;
   }
   var t297 = t618;
   var t619;
   if(t297 !== false) {
    return ___print(k296, "ERROR - has-1-9? incorrect");
   }
   else {
    return k296(undefined);
   }
  };
  var t622 = new SPOCK.Pair(2, new SPOCK.Pair(1, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null)))))))));
  return ___has_2d1_2d9_3f(t617, t622);
 };
 ___test_2dhas_2d1_2d9 = t616;	// set! test-has-1-9
 return ___test_2dhas_2d1_2d9(k292);
};
SPOCK.run(t603);
var t625 = function (k299) {
 var t626 = function (k300, t144) {	// rows-solved?
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t627 = function (k301, t145, t146) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t628 = function (t302) {
    var t629;
    if(t302 !== false) {
     return k301(t146);
    }
    else {
     return k301(false);
    }
   };
   return ___has_2d1_2d9_3f(t628, t145);
  };
  return ___fold(k300, t627, true, t144);
 };
 ___rows_2dsolved_3f = t626;	// set! rows-solved?
 var t634 = function (k303) {	// test-rows-solved
  var t635 = new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null))))))))), null)))))))));
  var t147 = t635;
  var t636 = function (t305) {
   var t148 = t305;
   var t637;
   if(t148 !== false) {
    t637 = false;
   }
   else {
    t637 = true;
   }
   var t304 = t637;
   var t638;
   if(t304 !== false) {
    return ___print(k303, "ERROR - rows-solved? incorrect");
   }
   else {
    return k303(undefined);
   }
  };
  return ___rows_2dsolved_3f(t636, t147);
 };
 ___test_2drows_2dsolved = t634;	// set! test-rows-solved
 return ___test_2drows_2dsolved(k299);
};
SPOCK.run(t625);
var t643 = function (k306) {
 var t644 = function (k307, t149) {	// cols-solved?
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t645 = function (k308, t150, t151) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t646 = function (t310) {
    var t647 = function (t309) {
     var t648;
     if(t309 !== false) {
      return k308(t151);
     }
     else {
      return k308(false);
     }
    };
    return ___has_2d1_2d9_3f(t647, t310);
   };
   return ___get_2dcolumn(t646, t149, t150);
  };
  var t653 = new SPOCK.Pair(0, new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, null)))))))));
  return ___fold(k307, t645, true, t653);
 };
 ___cols_2dsolved_3f = t644;	// set! cols-solved?
 var t655 = function (k311) {	// test-cols-solved
  var t656 = new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null))))))))), new SPOCK.Pair(new SPOCK.Pair(2, new SPOCK.Pair(2, new SPOCK.Pair(2, new SPOCK.Pair(2, new SPOCK.Pair(2, new SPOCK.Pair(2, new SPOCK.Pair(2, new SPOCK.Pair(2, new SPOCK.Pair(2, null))))))))), new SPOCK.Pair(new SPOCK.Pair(3, new SPOCK.Pair(3, new SPOCK.Pair(3, new SPOCK.Pair(3, new SPOCK.Pair(3, new SPOCK.Pair(3, new SPOCK.Pair(3, new SPOCK.Pair(3, new SPOCK.Pair(3, null))))))))), new SPOCK.Pair(new SPOCK.Pair(4, new SPOCK.Pair(4, new SPOCK.Pair(4, new SPOCK.Pair(4, new SPOCK.Pair(4, new SPOCK.Pair(4, new SPOCK.Pair(4, new SPOCK.Pair(4, new SPOCK.Pair(4, null))))))))), new SPOCK.Pair(new SPOCK.Pair(5, new SPOCK.Pair(5, new SPOCK.Pair(5, new SPOCK.Pair(5, new SPOCK.Pair(5, new SPOCK.Pair(5, new SPOCK.Pair(5, new SPOCK.Pair(5, new SPOCK.Pair(5, null))))))))), new SPOCK.Pair(new SPOCK.Pair(6, new SPOCK.Pair(6, new SPOCK.Pair(6, new SPOCK.Pair(6, new SPOCK.Pair(6, new SPOCK.Pair(6, new SPOCK.Pair(6, new SPOCK.Pair(6, new SPOCK.Pair(6, null))))))))), new SPOCK.Pair(new SPOCK.Pair(7, new SPOCK.Pair(7, new SPOCK.Pair(7, new SPOCK.Pair(7, new SPOCK.Pair(7, new SPOCK.Pair(7, new SPOCK.Pair(7, new SPOCK.Pair(7, new SPOCK.Pair(7, null))))))))), new SPOCK.Pair(new SPOCK.Pair(8, new SPOCK.Pair(8, new SPOCK.Pair(8, new SPOCK.Pair(8, new SPOCK.Pair(8, new SPOCK.Pair(8, new SPOCK.Pair(8, new SPOCK.Pair(8, new SPOCK.Pair(8, null))))))))), new SPOCK.Pair(new SPOCK.Pair(9, new SPOCK.Pair(9, new SPOCK.Pair(9, new SPOCK.Pair(9, new SPOCK.Pair(9, new SPOCK.Pair(9, new SPOCK.Pair(9, new SPOCK.Pair(9, new SPOCK.Pair(9, null))))))))), null)))))))));
  var t152 = t656;
  var t657 = function (t313) {
   var t153 = t313;
   var t658;
   if(t153 !== false) {
    t658 = false;
   }
   else {
    t658 = true;
   }
   var t312 = t658;
   var t659;
   if(t312 !== false) {
    return ___print(k311, "ERROR - cols-solved? incorrect");
   }
   else {
    return k311(undefined);
   }
  };
  return ___cols_2dsolved_3f(t657, t152);
 };
 ___test_2dcols_2dsolved = t655;	// set! test-cols-solved
 return ___test_2dcols_2dsolved(k306);
};
SPOCK.run(t643);
var t664 = function (k314) {
 var t665 = function (k315, t154) {	// quads-solved?
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t666 = function (k316, t155, t156) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t667 = function (t318) {
    var t668 = function (t317) {
     var t669;
     if(t317 !== false) {
      return k316(t156);
     }
     else {
      return k316(false);
     }
    };
    return ___has_2d1_2d9_3f(t668, t318);
   };
   var t157 = t155;
   var t158 = t157;
   var t673 = t158.car;
   var t159 = t155;
   var t161 = t159;
   var t162 = t161;
   var t674 = t162.cdr;
   var t160 = t674;
   var t163 = t160;
   var t675 = t163.car;
   return ___get_2dquad(t667, t154, t673, t675);
  };
  var t677 = new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(0, null)), new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(1, null)), new SPOCK.Pair(new SPOCK.Pair(0, new SPOCK.Pair(2, null)), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(0, null)), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(1, null)), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, null)), new SPOCK.Pair(new SPOCK.Pair(2, new SPOCK.Pair(0, null)), new SPOCK.Pair(new SPOCK.Pair(2, new SPOCK.Pair(1, null)), new SPOCK.Pair(new SPOCK.Pair(2, new SPOCK.Pair(2, null)), null)))))))));
  return ___fold(k315, t666, true, t677);
 };
 ___quads_2dsolved_3f = t665;	// set! quads-solved?
 var t679 = function (k319) {	// test-quads-solved
  var t680 = new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, null))))))))), new SPOCK.Pair(new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, null))))))))), new SPOCK.Pair(new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, null))))))))), new SPOCK.Pair(new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, null))))))))), new SPOCK.Pair(new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, null))))))))), new SPOCK.Pair(new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, null))))))))), new SPOCK.Pair(new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, new SPOCK.Pair(7, new SPOCK.Pair(8, new SPOCK.Pair(9, null))))))))), null)))))))));
  var t164 = t680;
  var t681 = function (t321) {
   var t165 = t321;
   var t682;
   if(t165 !== false) {
    t682 = false;
   }
   else {
    t682 = true;
   }
   var t320 = t682;
   var t683;
   if(t320 !== false) {
    return ___print(k319, "ERROR - quads-solved? incorrect");
   }
   else {
    return k319(undefined);
   }
  };
  return ___quads_2dsolved_3f(t681, t164);
 };
 ___test_2dquads_2dsolved = t679;	// set! test-quads-solved
 return ___test_2dquads_2dsolved(k314);
};
SPOCK.run(t664);
var t688 = function (k322) {
 var t689 = function (k323, t166) {	// is-solved?
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t690 = function (t324) {
   var t691;
   if(t324 !== false) {
    var t692 = function (t325) {
     var t693;
     if(t325 !== false) {
      return ___quads_2dsolved_3f(k323, t166);
     }
     else {
      return k323(false);
     }
    };
    return ___cols_2dsolved_3f(t692, t166);
   }
   else {
    return k323(false);
   }
  };
  return ___rows_2dsolved_3f(t690, t166);
 };
 ___is_2dsolved_3f = t689;	// set! is-solved?
 var t699 = function (k326, t167) {	// has-spaces?
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t700 = function (t328) {
   var t701 = function (t327) {
    var t702;
    if(t327 !== false) {
     return k326(true);
    }
    else {
     return k326(false);
    }
   };
   return ___member(t701, 0, t328);
  };
  var t706 = null;
  return ___fold(t700, ___append, t706, t167);
 };
 ___has_2dspaces_3f = t699;	// set! has-spaces?
 var t708 = function (k329) {	// test-has-spaces
  var t709 = new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(0, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null))))))))), null));
  var t168 = t709;
  var t710 = function (t331) {
   var t169 = t331;
   var t711;
   if(t169 !== false) {
    t711 = false;
   }
   else {
    t711 = true;
   }
   var t330 = t711;
   var t712;
   if(t330 !== false) {
    return ___print(k329, "ERROR - has-spaces? incorrect");
   }
   else {
    return k329(undefined);
   }
  };
  return ___has_2dspaces_3f(t710, t168);
 };
 ___test_2dhas_2dspaces = t708;	// set! test-has-spaces
 return ___test_2dhas_2dspaces(k322);
};
SPOCK.run(t688);
var t717 = function (k332) {
 var t718 = function (k333, t170) {	// find-space
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t719 = function (k334, t171, t172) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t720 = function (t335) {
    var t173 = t335;
    var t721;
    if(t173 !== false) {
     var t722 = function (t336) {
      var t178 = t336;
      return k334(t178);
     };
     return ____25list(t722, t173, t171);
    }
    else {
     return k334(t172);
    }
   };
   var t726 = function (k337, t174, t175) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t727 = function (t340) {
     var t728 = function (t339) {
      var t176 = t339;
      var t177 = 0;
      var t729 = (t176) === (t177);
      var t338 = t729;
      var t730;
      if(t338 !== false) {
       return k337(t174);
      }
      else {
       return k337(t175);
      }
     };
     return ___list_2dref(t728, t340, t174);
    };
    return ___list_2dref(t727, t170, t171);
   };
   var t735 = new SPOCK.Pair(0, new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, null)))))))));
   return ___fold(t720, t726, false, t735);
  };
  var t737 = new SPOCK.Pair(0, new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(8, null)))))))));
  return ___fold(k333, t719, false, t737);
 };
 ___find_2dspace = t718;	// set! find-space
 var t739 = function (k341) {	// test-find-space
  var t740 = new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(0, new SPOCK.Pair(1, null))))))))), new SPOCK.Pair(new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, new SPOCK.Pair(1, null))))))))), null)))))))));
  var t179 = t740;
  var t741 = function (t344) {
   var t181 = t344;
   var t742 = new SPOCK.Pair(7, new SPOCK.Pair(7, null));
   var t182 = t742;
   var t743 = SPOCK.equalp(t181, t182);
   var t343 = t743;
   var t180 = t343;
   var t744;
   if(t180 !== false) {
    t744 = false;
   }
   else {
    t744 = true;
   }
   var t342 = t744;
   var t745;
   if(t342 !== false) {
    return ___print(k341, "ERROR - find-space incorrect");
   }
   else {
    return k341(undefined);
   }
  };
  return ___find_2dspace(t741, t179);
 };
 ___test_2dfind_2dspace = t739;	// set! test-find-space
 return ___test_2dfind_2dspace(k332);
};
SPOCK.run(t717);
var t750 = function (k345) {
 var t751 = function (k346, t183) {	// solve
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t752 = function (t347) {
   var t753;
   if(t347 !== false) {
    return k346(t183);
   }
   else {
    var t755 = function (t355) {
     var t184 = t355;
     var t756;
     if(t184 !== false) {
      t756 = false;
     }
     else {
      t756 = true;
     }
     var t348 = t756;
     var t757;
     if(t348 !== false) {
      return k346(false);
     }
     else {
      var t759 = function (t349) {
       var t760;
       if(t349 !== false) {
        var t761 = function (t350) {
         var t185 = t350;
         var t762 = function (t354) {
          var t763 = function (k351, t186, t187) {
           var r = SPOCK.count(arguments);
           if(r) return r;
           var t764 = function (t352) {
            var t188 = t352;
            var t765 = function (t353) {
             var t196 = t353;
             var t766;
             if(t196 !== false) {
              t766 = t196;
             }
             else {
              t766 = t187;
             }
             return k351(t766);
            };
            return ___solve(t765, t188);
           };
           var t189 = t185;
           var t190 = t189;
           var t769 = t190.car;
           var t191 = t185;
           var t193 = t191;
           var t194 = t193;
           var t770 = t194.cdr;
           var t192 = t770;
           var t195 = t192;
           var t771 = t195.car;
           return ___set_2dposition(t764, t183, t769, t771, t186);
          };
          return ___fold(k346, t763, false, t354);
         };
         var t197 = t185;
         var t198 = t197;
         var t774 = t198.car;
         var t199 = t185;
         var t201 = t199;
         var t202 = t201;
         var t775 = t202.cdr;
         var t200 = t775;
         var t203 = t200;
         var t776 = t203.car;
         return ___avaliable_2dat_2dposition(t762, t183, t774, t776);
        };
        return ___find_2dspace(t761, t183);
       }
       else {
        return k346(false);
       }
      };
      return ___has_2dspaces_3f(t759, t183);
     }
    };
    return ___has_2dspaces_3f(t755, t183);
   }
  };
  return ___is_2dsolved_3f(t752, t183);
 };
 ___solve = t751;	// set! solve
 var t783 = function (k356, t204) {	// make-board
  var r = SPOCK.count(arguments);
  if(r) return r;
  return ___chunk(k356, t204, 9);
 };
 ___make_2dboard = t783;	// set! make-board
 var t785 = function (k357, t205) {	// show-solution
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t786 = function (t363) {
   var t787 = function (t358) {
    var t206 = t358;
    var t788;
    if(t206 !== false) {
     var t789 = function (t361) {
      var t790 = function (k359, t207) {
       var r = SPOCK.count(arguments);
       if(r) return r;
       var t791 = document.getElementById(t207);
       var t208 = t791;
       var t792 = function (t360) {
        t208.value = t360;
        return k359(t360);
       };
       return ___list_2dref(t792, t206, t207);
      };
      return ___for_2deach(k357, t790, t361);
     };
     return ___range(t789, 81);
    }
    else {
     var t797 = function (t362) {
      return t362(k357, "No Solution Found.");
     };
     return ___native(t797, alert);
    }
   };
   return ___solve(t787, t363);
  };
  return ___make_2dboard(t786, t205);
 };
 ___show_2dsolution = t785;	// set! show-solution
 var t802 = new SPOCK.Pair(9, new SPOCK.Pair(7, new SPOCK.Pair(2, new SPOCK.Pair(8, new SPOCK.Pair(6, new SPOCK.Pair(3, new SPOCK.Pair(5, new SPOCK.Pair(4, new SPOCK.Pair(1, new SPOCK.Pair(6, new SPOCK.Pair(0, new SPOCK.Pair(8, new SPOCK.Pair(7, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(9, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(3, new SPOCK.Pair(2, new SPOCK.Pair(9, new SPOCK.Pair(1, new SPOCK.Pair(6, new SPOCK.Pair(8, new SPOCK.Pair(7, new SPOCK.Pair(5, new SPOCK.Pair(4, new SPOCK.Pair(9, new SPOCK.Pair(1, new SPOCK.Pair(2, new SPOCK.Pair(8, new SPOCK.Pair(7, new SPOCK.Pair(3, new SPOCK.Pair(6, new SPOCK.Pair(8, new SPOCK.Pair(2, new SPOCK.Pair(1, new SPOCK.Pair(6, new SPOCK.Pair(3, new SPOCK.Pair(7, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(9, new SPOCK.Pair(7, new SPOCK.Pair(3, new SPOCK.Pair(6, new SPOCK.Pair(4, new SPOCK.Pair(5, new SPOCK.Pair(9, new SPOCK.Pair(2, new SPOCK.Pair(1, new SPOCK.Pair(8, new SPOCK.Pair(2, new SPOCK.Pair(9, new SPOCK.Pair(5, new SPOCK.Pair(3, new SPOCK.Pair(8, new SPOCK.Pair(6, new SPOCK.Pair(1, new SPOCK.Pair(7, new SPOCK.Pair(4, new SPOCK.Pair(1, new SPOCK.Pair(8, new SPOCK.Pair(4, new SPOCK.Pair(9, new SPOCK.Pair(7, new SPOCK.Pair(2, new SPOCK.Pair(3, new SPOCK.Pair(6, new SPOCK.Pair(5, new SPOCK.Pair(3, new SPOCK.Pair(6, new SPOCK.Pair(7, new SPOCK.Pair(5, new SPOCK.Pair(1, new SPOCK.Pair(4, new SPOCK.Pair(8, new SPOCK.Pair(9, new SPOCK.Pair(2, null)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
 var t209 = t802;
 var t803 = function (t366) {
  var t804 = function (k364, t210) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t805 = document.getElementById(t210);
   var t211 = t805;
   var t806 = function (t365) {
    t211.value = t365;
    return k364(t365);
   };
   return ___list_2dref(t806, t209, t210);
  };
  return ___for_2deach(k345, t804, t366);
 };
 return ___range(t803, 81);
};
SPOCK.run(t750);
var t811 = function (k367) {
 var t812 = function (k368) {	// solve-btn
  loop: while(true) {
   var t813 = document.getElementById("solve");
   return k368(t813);
  }
 };
 ___solve_2dbtn = t812;	// set! solve-btn
 var t815 = function (k369) {	// solve-btn-clicked
  var t816 = console.log("Solving...");
  var t817 = function (t372) {
   var t818 = function (t370) {
    return ___show_2dsolution(k369, t370);
   };
   var t820 = function (k371, t212) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t821 = function(k822, x) { return k822(x.value); }
    var t823 = document.getElementById(t212);
    return t821(k371, t823);
   };
   return ___map(t818, t820, t372);
  };
  var t826 = SPOCK.intern("-");
  return ___range(t817, 80, t826);
 };
 ___solve_2dbtn_2dclicked = t815;	// set! solve-btn-clicked
 var t828 = function (t373) {
  var t213 = ___solve_2dbtn_2dclicked;
  var t829 = SPOCK.callback(t213);
  t373.onclick = t829;
  return k367(t829);
 };
 return ___solve_2dbtn(t828);
};
SPOCK.run(t811);
SPOCK.flush();
/* END OF GENERATED CODE */
